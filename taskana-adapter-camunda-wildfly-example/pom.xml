<project xmlns="http://maven.apache.org/POM/4.0.0"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
        <parent>
                <artifactId>taskana-adapter-parent</artifactId>
                <groupId>pro.taskana</groupId>
                <version>0.9.4-SNAPSHOT</version>
                <relativePath>../pom.xml</relativePath>
        </parent>
        <modelVersion>4.0.0</modelVersion>
        <artifactId>taskana-adapter-camunda-wildfly-example</artifactId>
        <name>${project.groupId}:${project.artifactId}</name>
        <packaging>war</packaging>

        <properties>
                <failOnMissingWebXml>false</failOnMissingWebXml>
				<sonar.skip>true</sonar.skip>
        </properties>

        <dependencyManagement>
                <dependencies>
                        <dependency>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-dependencies</artifactId>
                                <version>${version.spring.boot}</version>
                                <type>pom</type>
                                <scope>import</scope>
                        </dependency>
                </dependencies>
        </dependencyManagement>

        <dependencies>
                <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-web</artifactId>
                        <exclusions>
                                <exclusion>
                                        <groupId>org.springframework.boot</groupId>
                                        <artifactId>spring-boot-starter-tomcat</artifactId>
                                </exclusion>
                        </exclusions>

                </dependency>
                <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-configuration-processor</artifactId>
                        <optional>true</optional>
                </dependency>
                <dependency>
                        <groupId>pro.taskana</groupId>
                        <artifactId>taskana-adapter</artifactId>
                        <version>${project.version}</version>
                </dependency>
                <dependency>
                        <groupId>pro.taskana</groupId>
                        <artifactId>taskana-adapter-camunda-system-connector</artifactId>
                        <version>${project.version}</version>
                </dependency>
                <dependency>
                        <groupId>pro.taskana</groupId>
                        <artifactId>taskana-adapter-taskana-connector</artifactId>
                        <version>${project.version}</version>
                </dependency>
                <dependency>
                        <groupId>com.ibm.db2.jcc</groupId>
                        <artifactId>db2jcc4</artifactId>
                        <version>${version.db2}</version>
                </dependency>
                <dependency>
                        <groupId>pro.taskana</groupId>
                        <artifactId>taskana-spring</artifactId>
                        <version>${version.taskana}</version>
                </dependency>

                <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${version.postgres}</version>
                </dependency>
                <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>${version.h2database}</version>
                </dependency>

                <dependency>
                        <groupId>org.springframework.plugin</groupId>
                        <artifactId>spring-plugin-core</artifactId>
                        <version>${version.spring.core}</version>
                </dependency>
                <dependency>
                        <groupId>javax.servlet</groupId>
                        <artifactId>javax.servlet-api</artifactId>
                        <version>${version.javax.servlet.api}</version>
                        <scope>provided</scope>
                </dependency>

                <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-test</artifactId>
                        <scope>test</scope>
                        <exclusions>
                                <exclusion>
                                        <groupId>com.vaadin.external.google</groupId>
                                        <artifactId>android-json</artifactId>
                                </exclusion>
                        </exclusions>
                </dependency>
        </dependencies>

        <profiles>
                <profile>
                        <id>postgres</id>
                        <activation>
                                <activeByDefault>false</activeByDefault>
                        </activation>
                        <!-- Reading properties from file and use then as data source properties
                                 is a pending improvement of Jboss development team check out -> https://issues.jboss.org/browse/WFMP-70
                                 That's why we are including postgres connection properties directly in this pom file.
                        -->
                        <properties>
                                <driver-class>org.postgresql.Driver</driver-class>
                                <connection-url>jdbc:postgresql://localhost:50102/postgres</connection-url>
                                <driver-name>postgresqldriver</driver-name>
                                <user-name>postgres</user-name>
                                <password>postgres</password>
                                <activatedProperties>postgres</activatedProperties>
                        </properties>
                </profile>

                <profile>
                        <id>h2</id>
                        <activation>
                                <activeByDefault>true</activeByDefault>
                        </activation>
                        <!-- Reading properties from file and use then as data source properties
                                 is a pending improvement of Jboss development team check out -> https://issues.jboss.org/browse/WFMP-70
                                 That's why we are including postgres connection properties directly in this pom file.
                        -->
                        <properties>
                                <driver-class>org.h2.Driver</driver-class>
                                <connection-url>datasource.url=jdbc:h2:mem:tca;IGNORECASE=TRUE;LOCK_MODE=0;INIT=CREATE SCHEMA IF NOT EXISTS TCA</connection-url>
                                <driver-name>h2driver</driver-name>
                                <user-name>sa</user-name>
                                <password>sa</password>
                        </properties>
                </profile>
        </profiles>

        <build>
                <resources>
                        <resource>
                                <directory>src/main/resources</directory>
                                <filtering>true</filtering>
                        </resource>
                </resources>
                <plugins>
                        <plugin>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-maven-plugin</artifactId>
                                <version>${version.spring.boot.maven.plugin}</version>
                        </plugin>
                        <plugin>
                                <groupId>org.wildfly.plugins</groupId>
                                <artifactId>wildfly-maven-plugin</artifactId>
                                <version>${version.wildfly.maven.plugin}</version>
                                <configuration>
                                        <version>${version.wildfly}</version>
                                        <javaOpts>-Djboss.http.port=8089</javaOpts>
                                </configuration>
                        </plugin>
                </plugins>
        </build>
        <!--
          this repository is needed to fetch com.ibm.db2.jcc
        -->
        <repositories>
                <repository>
                        <id>novatec public</id>
                        <name>novatec-repository</name>
                        <url>https://repository.novatec-gmbh.de/content/repositories/novatec/</url>
                </repository>
        </repositories>

</project>
