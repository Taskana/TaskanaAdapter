<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
        <parent>
                <artifactId>taskana-adapter-parent</artifactId>
                <groupId>pro.taskana</groupId>
                <version>0.9.5-SNAPSHOT</version>
        </parent>
        <modelVersion>4.0.0</modelVersion>

        <artifactId>taskana-adapter-camunda-listener-example</artifactId>

        <packaging>war</packaging>

        <name>${project.groupId}:${project.artifactId}</name>
        <description>A Process Application for [Camunda BPM](http://docs.camunda.org). [The project has been generated by the Maven archetype 'camunda-archetype-ejb-war-7.11.1']</description>

        <properties>
                <failOnMissingWebXml>false</failOnMissingWebXml>
                <sonar.skip>true</sonar.skip>
        </properties>

        <dependencyManagement>
                <dependencies>
                        <dependency>
                                <groupId>org.camunda.bpm</groupId>
                                <artifactId>camunda-bom</artifactId>
                                <version>${version.camunda}</version>
                                <scope>import</scope>
                                <type>pom</type>
                        </dependency>
                </dependencies>
        </dependencyManagement>

        <dependencies>

                <dependency>
                        <groupId>javax.ws.rs</groupId>
                        <artifactId>javax.ws.rs-api</artifactId>
                        <version>${version.javax.ws.rs.api}</version>
                </dependency>
                <!-- Jersey 2.19 -->
                <dependency>
                        <!-- process engine, needs to be 'provided' because it's already a shared library in the container -->
                        <groupId>org.camunda.bpm</groupId>
                        <artifactId>camunda-engine</artifactId>
                        <scope>provided</scope>
                </dependency>
                <dependency>
                        <!-- client for Java EE application server integration, included in WAR as an alternative to write your own ProcessApplication class -->
                        <groupId>org.camunda.bpm.javaee</groupId>
                        <artifactId>camunda-ejb-client</artifactId>
                </dependency>
                <dependency>
                        <!-- CDI integration, needs to be included in WAR, otherwise CDI can not work correctly -->
                        <groupId>org.camunda.bpm</groupId>
                        <artifactId>camunda-engine-cdi</artifactId>
                </dependency>

                <dependency>
                        <!-- AssertJ Testing Library -->
                        <groupId>org.camunda.bpm.extension</groupId>
                        <artifactId>camunda-bpm-assert</artifactId>
                        <version>${version.camunda.bpm.extensions}</version>
                        <scope>test</scope>
                </dependency>

                <!-- Required to use Spin dataformat support in unit tests -->
                <dependency>
                        <groupId>org.camunda.spin</groupId>
                        <artifactId>camunda-spin-dataformat-all</artifactId>
                        <scope>provided</scope>
                </dependency>
                <dependency>
                        <groupId>org.camunda.bpm</groupId>
                        <artifactId>camunda-engine-plugin-spin</artifactId>
                        <scope>provided</scope>
                </dependency>

                <!-- Required to use Templates in unit tests -->
                <dependency>
                        <groupId>org.camunda.template-engines</groupId>
                        <artifactId>camunda-template-engines-freemarker</artifactId>
                        <scope>provided</scope>
                </dependency>
                <dependency>
                        <groupId>org.camunda.template-engines</groupId>
                        <artifactId>camunda-template-engines-velocity</artifactId>
                        <scope>provided</scope>
                </dependency>

                <dependency>
                        <!-- Bootstrap for styling via Webjars project -->
                        <groupId>org.webjars</groupId>
                        <artifactId>bootstrap</artifactId>
                        <version>${version.org.webjars.bootstrap}</version>
                </dependency>

                <dependency>
                        <groupId>org.jboss.spec</groupId>
                        <artifactId>jboss-javaee-6.0</artifactId>
                        <version>${version.org.jboss.spec}</version>
                        <type>pom</type>
                        <scope>provided</scope>
                </dependency>

                <dependency>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                        <version>${version.junit}</version>
                        <scope>test</scope>
                </dependency>

                <dependency>
                        <!-- Needed for InMemoryH2Test -->
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>${version.h2database}</version>
                        <scope>test</scope>
                </dependency>

        </dependencies>

        <repositories>
                <repository>
                        <id>camunda-bpm-nexus</id>
                        <name>Camunda Maven Repository</name>
                        <url>https://app.camunda.com/nexus/content/groups/public</url>
                </repository>
                <!-- enable this for EE dependencies (requires credentials in ~/.m2/settings.xml)
        <repository>
          <id>camunda-bpm-nexus-ee</id>
          <name>Camunda Enterprise Maven Repository</name>
          <url>https://app.camunda.com/nexus/content/repositories/camunda-bpm-ee</url>
        </repository>
        -->
                <repository>
                        <id>jboss-public-repository</id>
                        <name>JBoss Repository</name>
                        <url>http://repository.jboss.org/nexus/content/groups/public</url>
                </repository>
        </repositories>

        <build>
                <finalName>${project.artifactId}</finalName>
                <plugins>
                        <plugin>
                                <!-- Deploy to JBoss AS7: mvn clean jboss-as:deploy See also: https://docs.jboss.org/jbossas/7/plugins/maven/latest/examples/deployment-example.html -->
                                <groupId>org.jboss.as.plugins</groupId>
                                <artifactId>jboss-as-maven-plugin</artifactId>
                                <version>${version.jboss-as-maven-plugin}</version>
                        </plugin>
                        <plugin>
                                <!-- Deploy to Wildfly: mvn clean wildfly:deploy See also: https://docs.jboss.org/wildfly/plugins/maven/latest/examples/deployment-example.html -->
                                <groupId>org.wildfly.plugins</groupId>
                                <artifactId>wildfly-maven-plugin</artifactId>
                                <version>${version.wildfly.maven.plugin}</version>
                        </plugin>
                        <plugin>
                                <!-- Deploy to JBoss using: mvn clean package antrun:run
                     Follow the instructions in build.properties.example to make it work!-->
                                <groupId>org.apache.maven.plugins</groupId>
                                <artifactId>maven-antrun-plugin</artifactId>
                                <configuration>
                                        <tasks>
                                                <ant antfile="${basedir}/build.xml">
                                                        <target name="copy.war.into.jboss" />
                                                </ant>
                                        </tasks>
                                </configuration>
                        </plugin>
                </plugins>
        </build>

        <profiles>
                <profile>
                        <id>default</id>
                        <activation>
                                <activeByDefault>true</activeByDefault>
                        </activation>
                        <build>
                                <plugins>
                                        <plugin>
                                                <groupId>org.apache.maven.plugins</groupId>
                                                <artifactId>maven-surefire-plugin</artifactId>
                                                <version>${version.maven.surefire.plugin}</version>
                                        </plugin>
                                </plugins>
                        </build>
                </profile>

        </profiles>


</project>
