<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>taskana-adapter-camunda-listener-example</artifactId>
  <packaging>war</packaging>

  <name>${project.groupId}:${project.artifactId}</name>

  <description>A Process Application for [Camunda BPM](https://docs.camunda.org).</description>

  <parent>
    <groupId>pro.taskana</groupId>
    <artifactId>taskana-adapter-parent</artifactId>
    <version>3.0.0-SNAPSHOT</version>
  </parent>

  <properties>
    <failOnMissingWebXml>false</failOnMissingWebXml>
  </properties>

  <dependencies>
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
      <version>${version.jakarta-ws-rs-api}</version>
    </dependency>
    <!-- Jersey 2.19 -->
    <dependency>
      <!-- process engine, needs to be 'provided' because it's already a shared library in the container -->
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <!-- client for Java EE application server integration, included in WAR as an alternative to write your own ProcessApplication class -->
      <groupId>org.camunda.bpm.javaee</groupId>
      <artifactId>camunda-ejb-client</artifactId>
    </dependency>
    <dependency>
      <!-- CDI integration, needs to be included in WAR, otherwise CDI can not work correctly -->
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-cdi</artifactId>
    </dependency>
    <!-- Required to use Spin dataformat support in unit tests -->
    <dependency>
      <groupId>org.camunda.spin</groupId>
      <artifactId>camunda-spin-dataformat-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine-plugin-spin</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Required to use Templates in unit tests -->
    <dependency>
      <groupId>org.camunda.template-engines</groupId>
      <artifactId>camunda-template-engines-freemarker</artifactId>
      <version>${version.camunda.template-engines-freemarker}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.template-engines</groupId>
      <artifactId>camunda-template-engines-velocity</artifactId>
      <version>${version.camunda.template-engines-velocity}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- Bootstrap for styling via Webjars project -->
      <groupId>org.webjars</groupId>
      <artifactId>bootstrap</artifactId>
      <version>${version.org.webjars.bootstrap}</version>
    </dependency>
    <dependency>
      <!-- Needed for InMemoryH2Test -->
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${version.maven.surefire.plugin}</version>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>${version.maven-war-plugin}</version>
        <configuration>
          <attachClasses>true</attachClasses>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <plugin>
        <!-- Deploy to JBoss AS7: mvn clean jboss-as:deploy See also: https://docs.jboss.org/jbossas/7/plugins/maven/latest/examples/deployment-example.html -->
        <groupId>org.jboss.as.plugins</groupId>
        <artifactId>jboss-as-maven-plugin</artifactId>
        <version>${version.maven.jboss-as.plugin}</version>
      </plugin>
      <plugin>
        <!-- Deploy to Wildfly: mvn clean wildfly:deploy See also: https://docs.jboss.org/wildfly/plugins/maven/latest/examples/deployment-example.html -->
        <groupId>org.wildfly.plugins</groupId>
        <artifactId>wildfly-maven-plugin</artifactId>
        <version>${version.maven.wildfly.plugin}</version>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>${version.maven-war-plugin}</version>
      </plugin>
    </plugins>
  </build>
</project>
