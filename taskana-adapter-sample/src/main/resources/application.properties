# Set camunda hosts
taskana-camunda-camundasystemconnector.camundaSystemURLs=http://localhost:8080/engine-rest
logging.level.org.springframework=DEBUG
logging.level.pro.taskana=DEBUG
logging.level.com.spring.ibatis=DEBUG
logging.level.com.spring.ibatis.*=DEBUG
logging.level.org.apache.ibatis=DEBUG
# Set Server Port
server.port = 8081
spring.h2.console.enabled = true
spring.h2.console.path=/h2

# Predefine domains, classification typse and classification categories
taskana.domains = Domain_A , Domain_B
taskana.classification.types = TASK , DOCUMENT
taskana.classification.categories = EXTERNAL , MANUAL , AUTOMATIC , PROCESS

# Configue the dataource for Taskana DB
# datasource.url = jdbc:h2:tcp://localhost:8092/mem:taskana;IGNORECASE=TRUE;LOCK_MODE=0;INIT=CREATE SCHEMA IF NOT EXISTS TASKANA
# datasource.url=jdbc:h2:mem:taskana;IGNORECASE=TRUE;LOCK_MODE=0;INIT=CREATE SCHEMA IF NOT EXISTS TASKANA
# datasource.driverClassName = org.h2.Driver
# datasource.username = sa
# datasource.password = sa
#  datasource.url=jdbc:db2://localhost:50050/taskana
#  datasource.driverClassName=com.ibm.db2.jcc.DB2Driver
#  datasource.username=db2user
#  datasource.password=Db2password

datasource.url=jdbc:postgresql://localhost:50102/postgres
datasource.driverClassName=org.postgresql.Driver
datasource.username=postgres
datasource.password=postgres
taskana.schemaName=TASKANA
taskanaAdapter.schemaName=TCA


taskanaAdapter.total.transaction.lifetime.in.seconds = 120
taskanaAdapter.scheduler.run.interval.for.cleanup.tasks.cron=0 0/10 * * * *
taskanaAdapter.scheduler.task.age.for.cleanup.in.hours=10

taskanaAdapter.scheduler.run.interval.for.start.taskana.tasks.in.milliseconds=10000
taskanaAdapter.scheduler.run.interval.for.complete.general.tasks.in.milliseconds=10000
taskanaAdapter.scheduler.run.interval.for.check.cancelled.general.tasks.in.milliseconds=10000

